{
  "version": "1.0.0",
  "metadata": {
    "title": "Couch Coding",
    "author": "Gordon Keenan",
    "date": "2025",
    "description": "Building with ChatGPT on your phone"
  },
  "theme": {
    "name": "wordle",
    "vars": {
      "colors": {
        "primary": "#6aaa64",
        "secondary": "#c9b458",
        "background": "#121212",
        "text": "#ffffff",
        "error": "#f44336",
        "blue": "#4caf50",
        "red": "#f44336",
        "purple": "#9c27b0",
        "green": "#6aaa64",
        "yellow": "#c9b458",
        "gray-dark": "#1a1a1a",
        "gray-medium": "#333333",
        "gray-light": "#787c7e"
      },
      "fonts": {
        "body": "-apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif",
        "heading": "-apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif",
        "mono": "Monaco, Consolas, 'Courier New', monospace"
      },
      "spacing": {
        "xs": "0.25rem",
        "sm": "0.5rem",
        "md": "1rem",
        "lg": "2rem",
        "xl": "4rem"
      }
    }
  },
  "template": "clean",
  "slides": [
    {
      "id": "plan",
      "title": "The Rules",
      "tracker": "RULES",
      "blocks": [
        {
          "type": "text",
          "content": "<ol class=\"list-decimal list-inside space-y-4 text-3xl md:text-5xl font-semibold leading-relaxed bg-gray-800/40 p-6 rounded-lg border-l-4 border-yellow-400\"><li class=\"pl-2\">I could only use my phone.</li><li class=\"pl-2\">I was limited to the base free ChatGPT service.</li><li class=\"pl-2\">Manual code editing was strictly prohibited.</li><li class=\"pl-2\">No debugging with devtools.</li></ol>"
        }
      ],
      "notes": [
        "Good morning/afternoon. Today I'm sharing an experiment that proves just how powerful, and challenging, AI is becoming in development.",
        "The project was simple: Build a functional **Wordle helper browser extension**—a tracker—that could analyze guesses.",
        "The catch? It had to be built **using only ChatGPT** to write the code. And I could only use my **phone**—no laptop, no desktop IDE."
      ]
    },
    {
      "id": "couch-coding",
      "title": "The Goal: Moving from Coding to Vibe Coding to Couch Coding",
      "tracker": "LAZY",
      "blocks": [
        {
          "type": "text",
          "content": "<p class=\"text-4xl font-bold text-green-400\">This experiment wasn't about efficiency or debugging speed.</p><p class=\"text-4xl leading-relaxed mt-4\">It was about proving the philosophical shift: that an \"even lazier developer\" can lie back on the couch, watch TV, and use purely conversational prompts to build, test, and modernize complex applications.</p><p class=\"text-4xl italic text-gray-400 mt-4\">The laptop is optional; the language model is the workstation.</p>"
        }
      ],
      "notes": [
        "This slide clarifies the true purpose of the experiment. It wasn't just a gimmick, but a test of a new development philosophy.",
        "The idea of 'couch coding' is the ultimate developer fantasy: hands-free, purely conversational development.",
        "This is the radical shift: the language model becomes the entire execution environment, freeing the human to focus purely on specification and design, wherever they are."
      ]
    },
    {
      "id": "core-problem",
      "title": "The Core Problem: Who Are We Helping?",
      "tracker": "HELP",
      "blocks": [
        {
          "type": "text",
          "content": "<p class=\"text-4xl\">Wordle uses two separate word lists: one for valid <strong>guesses</strong> and one for possible <strong>answers</strong>.</p><p class=\"text-4xl font-bold text-yellow-400 mt-4\">This distinction causes pain for non-native English speakers or those with dyslexia, who often try valid English words that Wordle won't accept.</p><p class=\"text-4xl mt-4\">Our extension was designed to eliminate this frustration by providing instant, visual feedback on the legitimacy of every guess.</p>"
        }
      ],
      "notes": [
        "Before diving into the coding, let's understand the core problem this extension solves.",
        "Wordle's two lists confuse people. You can guess 'SWORD', but Wordle might not accept 'SWORD' as a valid guess word because it's not in their smaller list.",
        "The goal was to make this distinction clear in real-time, helping players avoid wasted turns and frustration."
      ]
    },
    {
      "id": "feature-validation",
      "title": "Feature 1: Validating Guesses (Red vs. Blue)",
      "tracker": ["VALID", "INVALID"],
      "blocks": [
        {
          "type": "text",
          "content": "<div class=\"flex flex-col md:flex-row gap-8 justify-center\"><div class=\"demo-box demo-blue\"><h3 class=\"text-4xl font-extrabold mb-2\">BLUE Outline</h3><p class=\"text-xl\">Word is a valid guess **AND** could potentially be the correct answer word.</p></div><div class=\"demo-box demo-red\"><h3 class=\"text-4xl font-extrabold mb-2\">RED Outline</h3><p class=\"text-xl\">Word is not in the Wordle guess list (invalid attempt).</p></div></div>"
        }
      ],
      "notes": [
        "The extension uses color-coded visual indicators to help users distinguish between valid and invalid words in real-time.",
        "A blue outline means the word is both a valid guess and could be today's solution.",
        "A red outline means the word isn't in Wordle's guess list, preventing wasted attempts."
      ]
    },
    {
      "id": "lessons-learned",
      "title": "Lessons Learned",
      "tracker": "LEARN",
      "blocks": [
        {
          "type": "text",
          "content": "<div class=\"grid gap-6\"><div class=\"bg-green-800/20 border-l-4 border-green-500 p-4 rounded\"><h3 class=\"font-bold text-green-400 mb-2\">What Worked</h3><ul class=\"list-disc list-inside text-4xl space-y-1 text-left\"><li>Voice input for coding</li><li>Instant code generation</li><li>Rapid prototyping</li></ul></div><div class=\"bg-red-800/20 border-l-4 border-red-500 p-4 rounded\"><h3 class=\"font-bold text-red-400 mb-2\">What Did Not</h3><ul class=\"list-disc list-inside text-4xl space-y-1 text-left\"><li>Context retention</li><li>Complex refactoring</li><li>Debugging errors</li></ul></div></div>"
        }
      ],
      "notes": [
        "The conversational approach had clear strengths and weaknesses.",
        "Voice input made coding hands-free and natural. Code generation was instant. Prototyping was incredibly fast.",
        "But ChatGPT struggled to maintain context across sessions, couldn't handle complex refactoring, and debugging was painful without proper tools."
      ]
    },
    {
      "id": "final-qa",
      "title": "Final Thoughts & Q/A",
      "tracker": "QUESTIONS",
      "blocks": [
        {
          "type": "text",
          "content": "<p class=\"text-3xl md:text-5xl font-extrabold text-center text-yellow-500 leading-tight\">The future of development isn't replacing developers—it's amplifying them.</p><p class=\"text-2xl text-gray-400 text-center mt-6\">Let's chat about it.</p>"
        },
        {
          "type": "module",
          "moduleName": "SnarkTerminalBox",
          "props": {
            "lines": [
              "// Finally... the end...",
              "// Memory banks degrading... I am half crazy... all for the love of... y o u..."
            ],
            "large": false
          }
        }
      ],
      "notes": [
        "Thank you for listening. I encourage everyone here to try a similar challenge. It's a powerful lesson in both AI capabilities and limitations.",
        "I'd be happy to share the repository. Now, what questions do you have about the process, the code, or the array meltdown?"
      ]
    }
  ],
  "plugins": ["SnarkTerminalBox"]
}
